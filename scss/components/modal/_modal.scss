@use "../../global" as *;
@use "../../partials" as *;

.modal {
  &-content {
    @include radius(8);
    // box-shadow: $modalshadow;
  }

  &-header {
    border-bottom: 0;

    .btn-close {
      @include square(24);
      @include flex-center;
      overflow: hidden;
      opacity: 1;

      svg {
        @include wh100;
        @include transitiontransform;
      }

      @include hover {
        svg {
          @include rotate(90);

          path {
            // stroke: $danger;
          }
        }
      }
    }
  } 

  
}


.closejob-modal {

  .modal {
    
    &-content {
     border: none;
     box-shadow: $box-shadow-1;
    }
  
    &-header {
      @include border-single(bottom,solid,1,$headerborder);
      margin:0 5%;
      .modal-title {
        color: $headingText;
        @include font($primaryFont,16,medium,normal,25);
      }
    
    } 
    &-body {
      padding: size(12) 5%;

      .modal-text {
        @include font($primaryFont,14,normal,normal,23);
        color: $textPrimary;

        .jobname {
        @include font($primaryFont,14,semibold,normal,23);
        color: $headingText;

        }
       
      }
    }

    &-footer {
      gap: size(10);
      margin: 0 5%;
      .modal-cancel-btn {
        padding: size(10) size(30);
        @include border(solid,1,$headerborder);
        @include radius(7);
      }
      .modal-close-btn {
        padding: size(10) size(30);
        @include setBgColor($danger,$white);
        @include radius(7);
        @include border(solid,1,$danger);
        @include transitionsall;

        @include hover {

          @include setBgColor(darken($danger,10%),$white);

        }
      }
    }
  
    
  }

}

.succesfully-created {
  .modal {
    .customcheck {
      &-label {
        padding-left: size(20); 
        color: $textgray;
        &::before {
          @include circle;
        }
      }
    }
    .social-selects {
      @include flex;
      gap: size(10);
      flex-wrap: wrap;
      justify-content: center;
    }
    .single-select  {
      .checklabel {
       padding-top: size(16);
       padding-right: size(16); 
       height: size(64);
       width: size(106);
       user-select: none;
       @include border(solid,1,$headerborder);
       @include radius(8);
       @include flex-end;
       position: relative;
       .checkmark {
        display: inline-block;
        position: absolute;
        left: size(10);
        top: size(10);
        background-color: $white;
        @include border(solid,1,$headerborder);
        @include square(20);
        top: 50%;
        transform: translateY(-50%);
        @include circle; 
        &::after {
          content: '';
          position: absolute;
          left: size(6);
          top: size(2);
          height: size(12);
          width: size(6);
          transform: rotate(45deg);
          border: solid white;
          border-width: 0 size(2) size(2) 0;
          display: none;
        }

       }
      
      } 
      input[type="checkbox"] {
        width: 0;
        height: 0;
        opacity: 0;
        display: none;
        &:checked {
          ~ .checklabel {
            border-color: $primary;
            background: rgba(76, 111, 255, 0.05);
            .checkmark {
              background: $primary;
              border-color: $primary;
            &::after {
              display: block;
            }            }
          }
        }

       }
    }

    &-footer {
      border-top: none;
      .viewsite-btn {
        @include setBgColor($primary,$white);
        @include radius(10);
        padding: size(8) size(10);
        @include transitionsall;
        @include border(solid,1,$primary);
        @include font($primaryFont,12,medium,normal,16);
        @include breakpoint(mobile414) {
            padding: size(12) size(20);
        }
        @include hover {
            @include setBgColor(transparent,$textPrimary);
        }
    }
    }
    
  }
}

.darkmode {
  .succesfully-created {
    .modal {
      &-content {
        background: $lightDark;
      }
      .customcheck {
        &-label {
          padding-left: size(20); 
          color: $white;
          &::before {
            @include circle;
          }
        }
      }

      .single-select  {
        .checklabel {
        border-color: $textgray;
         .checkmark {
          background-color: $shade-1; 
          &::after {
          }
  
         }
        
        } 
        input[type="checkbox"] {
       
          &:checked {
            ~ .checklabel {
              border-color: $primary;
              background: rgba(76, 111, 255, 0.05);
             
                       
            }
          }
  
         }
      }
    }
  }
}