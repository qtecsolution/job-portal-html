@use "../../global" as *;
@use "../../partials" as *;

.modal {
  &-content {
    @include radius(8);
    // box-shadow: $modalshadow;
  }

  &-header {
    border-bottom: 0;

    .btn-close {
      @include square(24);
      @include flex-center;
      overflow: hidden;
      opacity: 1;

      svg {
        @include wh100;
        @include transitiontransform;
      }

      @include hover {
        svg {
          @include rotate(90);

          path {
            stroke: $danger;
          }
        }
      }
    }
  }
}


.succesfully-created {
  .modal {
    .social-selects {

    }
    .single-select {

      @include border(solid,1,$headerborder);
      @include radius(8);
      padding: size(16);
      width: 106px;
      height: 64px;
      display: flex;
      align-items: center;
      justify-content: center;
      user-select: none;
      cursor: pointer;

      .social-thumb {
        height: 35px;
        width:  66px;
         border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid gray;
        padding: 5px;
    }
    
.customcheck {
  @include flex-center;

  &-box {
    &:checked~.customcheck {
      background-color: red;
      &::before {
        background: $primary;
        border-color: $primary;
      }

      &::after {
        opacity: 1;
        visibility: visible;
      }
    }
  }

  &-label {
    position: relative;
    color: $primary;
    font: inherit;
    padding-left: size(16);
    cursor: pointer;

    &::before,
    &::after {
      content: '';
      @include absolute(top 50% left 0);
    }

    &::before {
      @include square(16);
      @include radius(3);
      @include border(solid, 1, $checkborder);
      @include translateY(-50%);
      @include transitionsall;
    }

    &::after {
      width: size(5);
      height: size(9);
      @include border(solid, 2, $white);
      border-top: 0;
      border-left: 0;
      left: size(6);
      @include transform(translateY(-60%) rotate(45deg));
      opacity: 0;
      visibility: hidden;
      @include transitionsall;
    }

    &::selection {
      @include setBgColor(transparent, tan);
    }
  }
}

    }
  }
}